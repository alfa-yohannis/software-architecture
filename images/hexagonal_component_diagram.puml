@startuml
'title Hexagonal Architecture - Class Diagram

' Domain Layer
class CustomerAccount <<Domain Layer>> {
    - id: String
    - name: String
    - balance: double
    --
    + deposit(amount: double)
    + withdraw(amount: double)
    + getName(): String
    + getBalance(): double
}

' Ports (Interface)
interface CustomerAccountRepository <<Ports>> {
    + save(account: CustomerAccount)
    + findById(id: String): CustomerAccount
}

' Adapters (Implementations)
class MySQLCustomerAccountRepository <<Adapters>> {
    - connection: Connection
    --
    + save(account: CustomerAccount)
    + findById(id: String): CustomerAccount
}

class PostgreSQLCustomerAccountRepository <<Adapters>> {
    - connection: Connection
    --
    + save(account: CustomerAccount)
    + findById(id: String): CustomerAccount
}

' Application Layer
class Main <<Application>> {
    + main(args: String[])
}

' Relationships
CustomerAccountRepository <|.. MySQLCustomerAccountRepository
CustomerAccountRepository <|.. PostgreSQLCustomerAccountRepository

Main ..> CustomerAccount : Instantiates
Main ..> CustomerAccountRepository : Instantiates via Reflection
CustomerAccountRepository ..> CustomerAccount : Uses
